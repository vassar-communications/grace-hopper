/* _utilities/_drupal-specific */
.clearDrupalFormatting {
  padding: var(--component-padding, 0);
}
.clearDrupalFormatting .content.py-3 {
  max-width: var(--content-mw, none);
  margin: var(--content-margin, 0);
  padding: var(--content-padding, 0) !important;
}

a:not(.btn):where(:not(.toolbar-icon)):hover,
a:visited:not(.btn):where(:not(.toolbar-icon)):hover {
  background-color: var(--bg-color-hover, none);
}

/* _layout-cols */
.layout-grid {
  display: flex;
  flex-wrap: wrap;
}
.layout-grid > * {
  flex: 1 1 20rem;
}

.layout-2cols {
  display: flex;
  flex-wrap: wrap;
  gap: var(--na-gap, 1rem);
}
.layout-2cols > * {
  flex: 1 1 max(20rem, calc(50% - var(--na-gap, 1rem)));
}

/* imageFeature */
.component--main-content.imageFeatureRow {
  padding: var(--component-padding, 0);
  min-height: 100vh;
}
.component--main-content.imageFeatureRow .content.py-3 {
  max-width: var(--content-mw, none);
  margin: var(--content-margin, 0);
  padding: var(--content-padding, 0) !important;
}
.component--main-content.imageFeatureRow .imageAlignment-left img {
  object-position: left;
}
.component--main-content.imageFeatureRow .imageAlignment-right img {
  object-position: right;
}
@media screen and (min-width: 50em) {
  .component--main-content.imageFeatureRow .imageFeature {
    display: flex;
  }
  .component--main-content.imageFeatureRow .imageFeature > * {
    min-width: 50%;
  }
}
.component--main-content.imageFeatureRow .imageFeature.imageCol-onRight {
  flex-direction: row-reverse;
}
.component--main-content.imageFeatureRow .imageFeature.imageCol-onRight .textColumn {
  justify-content: end;
}
.component--main-content.imageFeatureRow .imageFeature.mh-100vh {
  min-height: 100vh;
}
.component--main-content.imageFeatureRow .imageColumn {
  position: relative;
}
.component--main-content.imageFeatureRow .imageColumn img {
  position: var(--imageFeature_imageColumn-position, absolute);
  width: 100%;
  height: var(--imageFeature_imageColumn-height, 100%);
  object-fit: cover;
}
.component--main-content.imageFeatureRow .textColumn-content {
  max-width: 36rem;
}
.component--main-content.imageFeatureRow .textColumn {
  display: flex;
  align-items: center;
  padding: var(--imageFeature_textColumn-padding, clamp(1rem, 4vw, 4rem));
}

/*	_linkCards-fullBleed */
.linkCard-fullBleed {
  aspect-ratio: var(--lCardFB-aspectRatio, 16 / 9);
  overflow: hidden;
  position: relative;
}
.linkCard-fullBleed .linkCard_image {
  position: relative;
  height: 100%;
  width: 100%;
  transition: transform 0.4s;
  filter: var(--lCardFB-filter, none);
}
.linkCard-fullBleed img {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.linkCard-fullBleed:has(:hover) .linkCard_image, .linkCard-fullBleed:has(:focus) .linkCard_image {
  transform: scale(1.1);
}

.linkCard_link:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.linkCard_linkContainer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
  display: flex;
  align-items: end;
}
.linkCard_linkContainer a {
  font-size: var(--lCardFB-fontSize, clamp(2rem, 3vw, 3rem));
  font-family: var(--lCardFB-fontFamily, "acumin-pro-extra-condensed","Helvetica Neue","Helvetica","Arial",sans-serif);
  line-height: var(--lCardFB-lineHeight, 1);
  background-image: radial-gradient(farthest-corner at 0% 100%, var(--lCardFB-maskColor, rgba(0, 0, 0, 0.4)) 20%, var(--lCardFB-maskColor, rgba(0, 0, 0, 0.4)) 40%, transparent 70%, transparent 100%);
  padding: var(--lCardFB-padding, 1rem 6rem 1rem 2rem);
}

.linkCard-fullBleed.style-classic {
  --lCardFB-filter: grayscale(1);
}
